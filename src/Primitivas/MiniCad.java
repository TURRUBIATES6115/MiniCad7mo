/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Primitivas;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.filechooser.FileNameExtensionFilter;


public class MiniCad extends javax.swing.JFrame {

    Raster raster;
    JPanel Pizarra;
    Point p1, p2, p3, p4, l1, l2, l3, l4;
    boolean bDibujar, bDibujar2;
    boolean b1, b2, b3, b4;
    Color colo;
    ArrayList<Figura> figur = new ArrayList();
    int CL = 0, CC = 0, CE = 0, CT = 0, CP = 0;
    Matrix m = new Matrix();
    JFileChooser fc;
    FileNameExtensionFilter ff;

    /**
     * Creates new form MiniCad
     */
    public MiniCad() {
        initComponents();
        p1 = new Point();
        p2 = new Point();
        p3 = new Point();
        p4 = new Point();
        l1 = new Point();
        l2 = new Point();
        l3 = new Point();
        l4 = new Point();
        b1 = b2 = b3 = b4 = true;
        colo = Color.RED;
        fc = new JFileChooser();
        ff = new FileNameExtensionFilter("Imagenes PNG", "PNG");
        fc.setFileFilter(ff);
        raster = new Raster(600, 600);
        Pizarra = new MiPanel(raster);
        Pizarra.setSize(new Dimension(600, 600));
        Pizarra.setBackground(Color.white);
        setLayout(new BorderLayout());
        setSize(new Dimension(800, 600));
        setMaximumSize(new Dimension(800, 600));
        setMinimumSize(new Dimension(800, 600));
        getContentPane().setBackground(Color.DARK_GRAY);
        setLocationRelativeTo(null);
        jPanel1.setBackground(Color.DARK_GRAY);
        jPanel1.setSize(new Dimension(200, 600));
        jPanel1.setMaximumSize(new Dimension(200, 600));
        jPanel1.setMinimumSize(new Dimension(200, 600));
        Pizarra.setMaximumSize(new Dimension(800, 600));
        Pizarra.setMinimumSize(new Dimension(800, 600));
        add(Pizarra, BorderLayout.EAST);
        Pizarra.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                PizarraMouseClicked(evt);
            }
        });
        cuadricula();
        this.revalidate();
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MiniCad");
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(200, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(200, 500));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP), "Figuras", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gill Sans MT Condensed", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Linea");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Circulo");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("Elipse");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("Triangulo");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton5.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton5.setText("Cuadrado");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton5))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP), "Transformaciones y Opciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gill Sans MT Condensed", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Figuras:");

        jButton1.setText("Aplicar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Seleccionar color:");

        jButton2.setText("...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton6.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton6.setSelected(true);
        jRadioButton6.setText("Traslacion (X,Y)");

        buttonGroup2.add(jRadioButton7);
        jRadioButton7.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton7.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton7.setText("Escala (X,Y)");

        buttonGroup2.add(jRadioButton8);
        jRadioButton8.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jRadioButton8.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton8.setText("Rotacion");

        jLabel7.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Guardar en imagen:");

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 8, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton6)
                                    .addComponent(jRadioButton7)
                                    .addComponent(jRadioButton8)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton6)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton7)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton8)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton3))
                .addGap(0, 24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 592, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        b1 = b2 = b3 = b4 = true;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:   
        b1 = b2 = b3 = b4 = true;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:        
        b1 = b2 = b3 = b4 = true;
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        b1 = b2 = b3 = b4 = true;
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
        b1 = b2 = b3 = b4 = true;
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:    
        try {
            if (this.jRadioButton6.isSelected()) {
                int dato[] = new int[2];
                int index = this.jComboBox1.getSelectedIndex();
                String dat[] = this.jTextField1.getText().split(",");
                dato[0] = Integer.parseInt(dat[0]);
                dato[1] = Integer.parseInt(dat[1]);
                Figura f = this.figur.get(index);
                Matrix m = new Matrix();
                m.traslacion(dato[0] * 30, dato[1] * 30 * -1);
                if (f.id != 3 && f.id != 4) {
                    double pt1[] = new double[3];
                    pt1[0] = f.puntos[0].getX();
                    pt1[1] = f.puntos[0].getY();
                    pt1[2] = 1;
                    pt1 = m.pprima(pt1);
                    double pt2[] = new double[3];
                    pt2[0] = f.puntos[1].getX();
                    pt2[1] = f.puntos[1].getY();
                    pt2[2] = 1;
                    pt2 = m.pprima(pt2);
                    figur.get(index).puntos[0].setLocation(pt1[0], pt1[1]);
                    figur.get(index).puntos[1].setLocation(pt2[0], pt2[1]);
                } else {
                    double pt1[] = new double[3];
                    double pt2[] = new double[3];
                    double pt3[] = new double[3];
                    pt1[0] = f.puntos[0].getX();
                    pt1[1] = f.puntos[0].getY();
                    pt1[2] = 1;
                    pt1 = m.pprima(pt1);
                    pt2[0] = f.puntos[1].getX();
                    pt2[1] = f.puntos[1].getY();
                    pt2[2] = 1;
                    pt2 = m.pprima(pt2);
                    pt3[0] = f.puntos[2].getX();
                    pt3[1] = f.puntos[2].getY();
                    pt3[2] = 1;
                    pt3 = m.pprima(pt3);
                    figur.get(index).puntos[0].setLocation(pt1[0], pt1[1]);
                    figur.get(index).puntos[1].setLocation(pt2[0], pt2[1]);
                    figur.get(index).puntos[2].setLocation(pt3[0], pt3[1]);
                }
            }
            if (this.jRadioButton8.isSelected()) {
                int index = this.jComboBox1.getSelectedIndex();
                int dato = Integer.parseInt(this.jTextField1.getText());
                Figura f = this.figur.get(index);
                Matrix m = new Matrix();
                m.traslacion(-f.puntos[0].x, -f.puntos[0].y);
                m.rotacion(dato * -1);
                m.traslacion(f.puntos[0].x, f.puntos[0].y);
                if (f.id != 3 && f.id != 4) {
                    double pt1[] = new double[3];
                    pt1[0] = f.puntos[0].getX();
                    pt1[1] = f.puntos[0].getY();
                    pt1[2] = 1;
                    pt1 = m.pprima(pt1);
                    double pt2[] = new double[3];
                    pt2[0] = f.puntos[1].getX();
                    pt2[1] = f.puntos[1].getY();
                    pt2[2] = 1;
                    pt2 = m.pprima(pt2);
                    figur.get(index).puntos[0].setLocation(pt1[0], pt1[1]);
                    figur.get(index).puntos[1].setLocation(pt2[0], pt2[1]);
                } else {
                    double pt1[] = new double[3];
                    double pt2[] = new double[3];
                    double pt3[] = new double[3];
                    pt1[0] = f.puntos[0].getX();
                    pt1[1] = f.puntos[0].getY();
                    pt1[2] = 1;
                    pt1 = m.pprima(pt1);
                    pt2[0] = f.puntos[1].getX();
                    pt2[1] = f.puntos[1].getY();
                    pt2[2] = 1;
                    pt2 = m.pprima(pt2);
                    pt3[0] = f.puntos[2].getX();
                    pt3[1] = f.puntos[2].getY();
                    pt3[2] = 1;
                    pt3 = m.pprima(pt3);
                    figur.get(index).puntos[0].setLocation(pt1[0], pt1[1]);
                    figur.get(index).puntos[1].setLocation(pt2[0], pt2[1]);
                    figur.get(index).puntos[2].setLocation(pt3[0], pt3[1]);
                }
            }
            if (this.jRadioButton7.isSelected()) {
                double dato[] = new double[2];
                int index = this.jComboBox1.getSelectedIndex();
                String dat[] = this.jTextField1.getText().split(",");
                dato[0] = Double.parseDouble(dat[0]);
                dato[1] = Double.parseDouble(dat[1]);
                Figura f = this.figur.get(index);
                Matrix m = new Matrix();
                m.traslacion(-f.puntos[0].x, -f.puntos[0].y);
                m.escalarXY(dato[0], dato[1]);
                m.traslacion(f.puntos[0].x, f.puntos[0].y);
                if (f.id != 3 && f.id != 4) {
                    double pt1[] = new double[3];
                    pt1[0] = f.puntos[0].getX();
                    pt1[1] = f.puntos[0].getY();
                    pt1[2] = 1;
                    pt1 = m.pprima(pt1);
                    double pt2[] = new double[3];
                    pt2[0] = f.puntos[1].getX();
                    pt2[1] = f.puntos[1].getY();
                    pt2[2] = 1;
                    pt2 = m.pprima(pt2);
                    figur.get(index).puntos[0].setLocation(pt1[0], pt1[1]);
                    figur.get(index).puntos[1].setLocation(pt2[0], pt2[1]);
                    if (figur.get(index).id == 2) {
                        figur.get(index).d *= dato[0] * dato[1];
                    }
                } else {
                    double pt1[] = new double[3];
                    double pt2[] = new double[3];
                    double pt3[] = new double[3];
                    pt1[0] = f.puntos[0].getX();
                    pt1[1] = f.puntos[0].getY();
                    pt1[2] = 1;
                    pt1 = m.pprima(pt1);
                    pt2[0] = f.puntos[1].getX();
                    pt2[1] = f.puntos[1].getY();
                    pt2[2] = 1;
                    pt2 = m.pprima(pt2);
                    pt3[0] = f.puntos[2].getX();
                    pt3[1] = f.puntos[2].getY();
                    pt3[2] = 1;
                    pt3 = m.pprima(pt3);
                    figur.get(index).puntos[0].setLocation(pt1[0], pt1[1]);
                    figur.get(index).puntos[1].setLocation(pt2[0], pt2[1]);
                    figur.get(index).puntos[2].setLocation(pt3[0], pt3[1]);
                }
            }

            redibujado();
        } catch (Exception e) {
            cuadricula();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        colo = JColorChooser.showDialog(null, "Selector", Color.BLACK);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        fc.showSaveDialog(this);
        try {
            // retrieve image
            BufferedImage img = toBufferedImage(raster.toImage(this));
            File outputfile = new File(fc.getSelectedFile().getPath() + ".png");
            ImageIO.write(img, "png", outputfile);
        } catch (IOException e) {

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiniCad().setVisible(true);
            }
        });

    }

    public static BufferedImage toBufferedImage(Image img) {
        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }

        // Create a buffered image with transparency
        BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        // Draw the image on to the buffered image
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();

        // Return the buffered image
        return bimage;
    }

    public void redibujado() {
        raster.fill(Color.WHITE); //Relleno el raster de blanco
        //Tamaño del arraylist con las figuras
        for (int j = 0; j < figur.size(); j++) {
            Dibujado(figur.get(j), figur.get(j).color);
        }
        cuadricula(); //Dibujado de las lineas del plano para la decoracion
    }

    public void Dibujado(Figura f, Color c) {
        switch (f.id) {
            case 1:
                dibujarLinea(f.puntos[0], f.puntos[1], c);
                System.out.println("P1 " + f.puntos[0].x + " P2 " + f.puntos[0].y);
                System.out.println("P2 " + f.puntos[1].x + " P2 " + f.puntos[1].y);
                break;
            case 2:
                DibujadoCirculo(f.puntos[0], f.puntos[1], (int) f.d, c);
                System.out.println("P1 " + f.puntos[0].x + " P2 " + f.puntos[0].y);
                System.out.println("P2 " + f.puntos[1].x + " P2 " + f.puntos[1].y);
                break;
            case 3:
                dibujarElipse(f.puntos[0], f.puntos[1], f.puntos[2], c);
                System.out.println("P1 " + f.puntos[0].x + " P2 " + f.puntos[0].y);
                System.out.println("P2 " + f.puntos[1].x + " P2 " + f.puntos[1].y);
                System.out.println("P3 " + f.puntos[2].x + " P2 " + f.puntos[2].y);
                break;
            case 4:
                dibujarTriangulo(f.puntos[0], f.puntos[1], f.puntos[2], c);
                System.out.println("P1 " + f.puntos[0].x + " P2 " + f.puntos[0].y);
                System.out.println("P2 " + f.puntos[1].x + " P2 " + f.puntos[1].y);
                System.out.println("P3 " + f.puntos[2].x + " P2 " + f.puntos[2].y);
                break;
            case 5:
                dibujarCuadrado(f.puntos[1], f.puntos[0], c);
                System.out.println("P1 " + f.puntos[0].x + " P2 " + f.puntos[0].y);
                System.out.println("P2 " + f.puntos[1].x + " P2 " + f.puntos[1].y);
                break;
            default:
                break;
        }
    }

    public void lineFast(int x0, int y0, int x1, int y1, Color color) {
        int pix = color.getRGB();
        int dy = y1 - y0;
        int dx = x1 - x0;
        int stepx, stepy;
        if (dy < 0) {
            dy = -dy;
            stepy = -raster.width;
        } else {
            stepy = raster.width;
        }
        if (dx < 0) {
            dx = -dx;
            stepx = -1;
        } else {
            stepx = 1;
        }
        dy <<= 1;
        dx <<= 1;
        y0 *= raster.width;
        y1 *= raster.width;
        raster.pixel[x0 + y0] = pix;
        if (dx > dy) {
            int fraction = dy - (dx >> 1);
            while (x0 != x1) {
                if (fraction >= 0) {
                    y0 += stepy;
                    fraction -= dx;
                }
                x0 += stepx;
                fraction += dy;
                raster.pixel[x0 + y0] = pix;
            }
        } else {
            int fraction = dx - (dy >> 1);
            while (y0 != y1) {
                if (fraction >= 0) {
                    x0 += stepx;
                    fraction -= dy;
                }
                y0 += stepy;
                fraction += dx;
                raster.pixel[x0 + y0] = pix;
            }
        }
    }

    public void dibujarLinea(Point _p1, Point _p2, Color color) {
        lineFast(_p1.x, _p1.y, _p2.x, _p2.y, color);
    }

    public void dibujarTriangulo(Point p1, Point p2, Point p3, Color c) {
        // TODO add your handling code here:
        Vertex2D v1 = new Vertex2D(p1.x, p1.y, c.getRGB());
        Vertex2D v2 = new Vertex2D(p2.x, p2.y, c.getRGB());
        Vertex2D v3 = new Vertex2D(p3.x, p3.y, c.getRGB());

        TrianguloR tri = new TrianguloR(v1, v2, v3, c);

        tri.dibujar(raster);
    }

    public void dibujarCuadrado(Point p1, Point p2, Color color) {
        int d = (int) (Distancia(p2, p1) / Math.sqrt(2));
        if ((p1.x < p2.x) && (p1.y < p2.y)) {
            Vertex2D v1 = new Vertex2D(p1.x, p1.y, color.getRGB());
            Vertex2D v2 = new Vertex2D(p1.x + d, p1.y, color.getRGB());
            Vertex2D v3 = new Vertex2D(p1.x, p1.y + d, color.getRGB());
            Vertex2D v4 = new Vertex2D(p2.x, p2.y, color.getRGB());
            TrianguloR tri = new TrianguloR(v1, v2, v3, color);
            tri.dibujar(raster);
            TrianguloR tri2 = new TrianguloR(v2, v3, v4, color);
            tri2.dibujar(raster);
        } else if ((p1.x < p2.x) && (p1.y > p2.y)) {
            Vertex2D v1 = new Vertex2D(p1.x, p1.y, color.getRGB());
            Vertex2D v2 = new Vertex2D(p1.x + d, p1.y, color.getRGB());
            Vertex2D v3 = new Vertex2D(p1.x, p1.y - d, color.getRGB());
            Vertex2D v4 = new Vertex2D(p2.x, p2.y, color.getRGB());
            TrianguloR tri = new TrianguloR(v1, v2, v3, color);
            tri.dibujar(raster);
            TrianguloR tri2 = new TrianguloR(v2, v3, v4, color);
            tri2.dibujar(raster);
        } else if ((p1.x > p2.x) && (p1.y > p2.y)) {
            Vertex2D v1 = new Vertex2D(p1.x, p1.y, color.getRGB());
            Vertex2D v2 = new Vertex2D(p1.x - d, p1.y, color.getRGB());
            Vertex2D v3 = new Vertex2D(p1.x, p1.y - d, color.getRGB());
            Vertex2D v4 = new Vertex2D(p2.x, p2.y, color.getRGB());
            TrianguloR tri = new TrianguloR(v1, v2, v3, color);
            tri.dibujar(raster);
            TrianguloR tri2 = new TrianguloR(v2, v3, v4, color);
            tri2.dibujar(raster);
        } else if ((p1.x > p2.x) && (p1.y < p2.y)) {
            Vertex2D v1 = new Vertex2D(p1.x, p1.y, color.getRGB());
            Vertex2D v2 = new Vertex2D(p1.x - d, p1.y, color.getRGB());
            Vertex2D v3 = new Vertex2D(p1.x, p1.y + d, color.getRGB());
            Vertex2D v4 = new Vertex2D(p2.x, p2.y, color.getRGB());
            TrianguloR tri = new TrianguloR(v1, v2, v3, color);
            tri.dibujar(raster);
            TrianguloR tri2 = new TrianguloR(v2, v3, v4, color);
            tri2.dibujar(raster);
        }
    }

    public void cuadricula() {
        l1.x = 300;
        l1.y = 0;
        l2.x = 300;
        l2.y = 597;
        l3.x = 0;
        l3.y = 300;
        l4.x = 597;
        l4.y = 300;
        this.dibujarLinea(l1, l2, Color.BLACK);
        this.dibujarLinea(l3, l4, Color.BLACK);
        l1.x = 295;
        l2.x = 305;
        l1.y = 0;
        l2.y = 0;
        l3.x = 0;
        l4.x = 0;
        l3.y = 295;
        l4.y = 305;
        for (int i = 0; i < 19; i++) {
            l1.y += 30;
            l2.y += 30;
            this.dibujarLinea(l1, l2, Color.BLACK);
        }
        for (int i = 0; i < 19; i++) {
            l3.x += 30;
            l4.x += 30;
            this.dibujarLinea(l3, l4, Color.BLACK);
        }

    }

    public int getop() {
        int opc = 0;
        if (this.jRadioButton1.isSelected()) {
            opc = 1;
        } else if (this.jRadioButton2.isSelected()) {
            opc = 2;
        } else if (this.jRadioButton3.isSelected()) {
            opc = 3;
        } else if (this.jRadioButton4.isSelected()) {
            opc = 4;
        } else if (this.jRadioButton5.isSelected()) {
            opc = 5;
        }
        return opc;
    }

    public void clear() {
        int s = raster.size();
        for (int i = 0; i < s; i++) {
            raster.pixel[i] ^= 0x00ffffff;
        }
        super.repaint();
        return;
    }

    public void DibujadoCirculo(Point p1, Point p2, int r, Color color) {
        int pix = color.getRGB();
        double x2, y2;
        double angulo = 0;
        do {
            do {
                x2 = p1.x + r * Math.cos(angulo);
                y2 = p1.y + r * Math.sin(angulo);
                angulo += 0.005;
                raster.setPixel(pix, (int) x2, (int) y2);
            } while (angulo < 6.28);
            r--;
            angulo = 0;
        } while (r != 0);
    }

    public void dibujarElipse(Point p1, Point p2, Point p3, Color color) {
        double a, angulo, x3, y3, dis, teta;
        int xr, altura = Math.abs(p3.y - p1.y);
        int pix = color.getRGB();
        a = Math.abs(p2.x - p1.x);
        xr = p1.x + (int) (a * Math.cos(0));
        dis = Math.sqrt(Math.pow(p2.x - xr, 2));
        teta = Math.asin((dis / 2) / a);
        teta = 2 * teta;
        do {
            for (angulo = 0; angulo <= 360; angulo++) {
                x3 = p1.x + a * Math.cos(angulo + teta);
                y3 = p1.y + altura * Math.sin(angulo);
                p2.x = (int) x3;
                p2.y = (int) y3;
                raster.setPixel(pix, (int) Math.round(x3), (int) Math.round(y3));
                dibujarLinea(p1, p2, color);
            }
            a--;
            altura--;

        } while (a != 0 && altura != 0);
    }

    public double Distancia(Point p1, Point p2) {
        double radio;
        radio = (Math.sqrt(((p2.x - p1.x) * (p2.x - p1.x)) + ((p2.y - p1.y) * (p2.y - p1.y))));
        return radio;
    }

    public void PizarraMouseClicked(java.awt.event.MouseEvent evt) {
        try {
            switch (getop()) {
                case 1:
                    if (b1) {
                        p1.x = evt.getX();
                        p1.y = evt.getY();
                        b1 = false;
                    } else {
                        p2.x = evt.getX();
                        p2.y = evt.getY();
                        dibujarLinea(p1, p2, colo);
                        b1 = true;
                        cuadricula();
                        Point ma[];
                        ma = new Point[2];
                        ma[0] = p1;
                        ma[1] = p2;
                        figur.add(new Figura(ma, 1, 0, colo));
                        CL++;
                        this.jComboBox1.addItem("Linea " + CL);
                    }
                    break;
                case 2:
                    if (b1) {
                        p1.x = evt.getX();
                        p1.y = evt.getY();
                        b1 = false;
                    } else {
                        p2.x = evt.getX();
                        p2.y = evt.getY();
                        DibujadoCirculo(p1, p2, (int) Distancia(p1, p2), colo);
                        cuadricula();
                        Point ma[];
                        ma = new Point[2];
                        ma[0] = p1;
                        ma[1] = p2;
                        figur.add(new Figura(ma, 2, Distancia(p1, p2), colo));
                        CC++;
                        this.jComboBox1.addItem("Circulo " + CC);
                        b1 = true;
                    }
                    break;
                case 3:
                    if (b1 && b2) {
                        p1.x = evt.getX();
                        p1.y = evt.getY();
                        b1 = false;
                    } else if (!b1 && b2) {
                        p2.x = evt.getX();
                        p2.y = evt.getY();
                        b2 = false;
                    } else if (!b1 && !b2) {
                        p3.x = evt.getX();
                        p3.y = evt.getY();
                        dibujarElipse(p1, p2, p3, colo);
                        cuadricula();
                        Point ma[];
                        ma = new Point[3];
                        ma[0] = p1;
                        ma[1] = p2;
                        ma[2] = p3;
                        figur.add(new Figura(ma, 3, 0, colo));
                        CE++;
                        this.jComboBox1.addItem("Elipse " + CE);
                        b1 = b2 = true;
                    }
                    break;
                case 4:
                    if (b1 && b2) {
                        p1.x = evt.getX();
                        p1.y = evt.getY();
                        b1 = false;
                    } else if (!b1 && b2) {
                        p2.x = evt.getX();
                        p2.y = evt.getY();
                        b2 = false;
                    } else if (!b1 && !b2) {
                        p3.x = evt.getX();
                        p3.y = evt.getY();
                        dibujarTriangulo(p1, p2, p3, colo);
                        cuadricula();
                        Point ma[];
                        ma = new Point[3];
                        ma[0] = p1;
                        ma[1] = p2;
                        ma[2] = p3;
                        figur.add(new Figura(ma, 4, 0, colo));
                        CT++;
                        this.jComboBox1.addItem("Triangulo " + CT);
                        b1 = b2 = true;
                    }
                    break;
                case 5:
                    if (b1) {
                        p1.x = evt.getX();
                        p1.y = evt.getY();
                        b1 = false;
                    } else {
                        p2.x = evt.getX();
                        p2.y = evt.getY();
                        dibujarCuadrado(p1, p2, colo);
                        cuadricula();
                        Point ma[];
                        ma = new Point[2];
                        ma[0] = p1;
                        ma[1] = p2;
                        figur.add(new Figura(ma, 5, 0, colo));
                        CP++;
                        this.jComboBox1.addItem("Cuadrado " + CP);
                        b1 = true;
                    }
                default:
                    break;
            }
        } catch (Exception e) {
            cuadricula();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
